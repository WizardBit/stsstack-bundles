# This is a Juju bundle template and is part of
# https://git.launchpad.net/stsstack-bundles.
# The template is used in conjunction with the provided generate-bundle.sh tool
# to generate a Juju bundle along with optional overlays. If you need to make
# modifications it is suggested to make them to the template then re-generate
# your bundle.

# Variables
debug:                      &debug                     True
verbose:                    &verbose                   True
openstack_origin:           &openstack_origin          __OS_ORIGIN__
source:                     &source                    __SOURCE__

ssl_ca:                     &ssl_ca                    __SSL_CA__
ssl_cert:                   &ssl_cert                  __SSL_CERT__
ssl_key:                    &ssl_key                   __SSL_KEY__

series: __SERIES__
applications:
  rabbitmq-server:
    num_units: __NUM_RABBIT_UNITS__
    charm: cs:~openstack-charmers-next/rabbitmq-server
    constraints: mem=1G
    options:
      source: *source
      min-cluster-size: __NUM_RABBIT_UNITS__
  nova-compute:
    charm: cs:~openstack-charmers-next/nova-compute
    num_units: __NUM_COMPUTE_UNITS__
    constraints: __NOVA_COMPUTE_UNIT_CONSTRAINTS__
    options:
      debug: *debug
      verbose: *verbose
      enable-live-migration: True
      enable-resize: True
      migration-auth-type: ssh
      openstack-origin: *openstack_origin
      force-raw-images: false  # disable for stsstack since conversion kills the disks and is not needed
  nova-cloud-controller:
    num_units: __NUM_NOVACC_UNITS__
    charm: cs:~openstack-charmers-next/nova-cloud-controller
    constraints: mem=2G
    options:
      debug: *debug
      verbose: *verbose
      network-manager: Neutron
      openstack-origin: *openstack_origin
      ssl_ca: *ssl_ca
      ssl_cert: *ssl_cert
      ssl_key: *ssl_key
  neutron-api:
    num_units: __NUM_NEUTRON_API_UNITS__
    charm: cs:~openstack-charmers-next/neutron-api
    constraints: mem=2G
    options:
      debug: *debug
      verbose: *verbose
      default-tenant-network-type: __OVERLAY_NETWORK_TYPE__
      neutron-security-groups: True
      flat-network-providers: physnet1
      enable-ml2-port-security: True
      openstack-origin: *openstack_origin
      ssl_ca: *ssl_ca
      ssl_cert: *ssl_cert
      ssl_key: *ssl_key
      global-physnet-mtu: 8958  # maximum available mtu in stsstack
      path-mtu: 1550
      physical-network-mtus: physnet1:1500
  cinder:
    num_units: __NUM_CINDER_UNITS__
    constraints: mem=2G
    charm: cs:~openstack-charmers-next/cinder
    options:
      debug: *debug
      verbose: *verbose
      block-device: /var/disk.img
      ephemeral-unmount: "/mnt"
      overwrite: "true"
      glance-api-version: 2
      openstack-origin: *openstack_origin
      ssl_ca: *ssl_ca
      ssl_cert: *ssl_cert
      ssl_key: *ssl_key
  glance:
    num_units: __NUM_GLANCE_UNITS__
    charm: cs:~openstack-charmers-next/glance
    constraints: mem=1G
    options:
      debug: *debug
      verbose: *verbose
      openstack-origin: *openstack_origin
      ssl_ca: *ssl_ca
      ssl_cert: *ssl_cert
      ssl_key: *ssl_key
relations:
  - [ keystone, mysql ]
  - [ "nova-cloud-controller:shared-db", mysql ]
  - [ "nova-cloud-controller:amqp", rabbitmq-server ]
  - [ nova-cloud-controller, glance ]
  - [ nova-cloud-controller, keystone ]
  - [ nova-compute, nova-cloud-controller ]
  - - nova-compute
    - rabbitmq-server:amqp
  - [ nova-compute, glance ]
  - [ glance, mysql ]
  - [ glance, keystone ]
  - [ glance, "cinder:image-service" ]
  - [ glance, rabbitmq-server ]
  - [ cinder, mysql ]
  - [ cinder, rabbitmq-server ]
  - [ cinder, nova-cloud-controller ]
  - [ cinder, keystone ]
  - [ neutron-api, mysql ]
  - [ neutron-api, rabbitmq-server ]
  - [ neutron-api, nova-cloud-controller ]
  - [ neutron-api, keystone ]
