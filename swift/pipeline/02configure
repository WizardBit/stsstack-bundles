#!/bin/bash -eu
# Global variables are first defined in 00setup and module
# dependencies are defined in 01import-config-defaults
#
# All overlay/bundle variables (MOD_PARAMS) defaults must go into
# the <module>/module_defaults file.


# We always add this overlay since it contains core apps for this module.
MOD_OVERLAYS+=( swift.yaml )

# Skip processing input if it includes exclusive passthrough options
! has_excl_passthrough_opt && \
while (($# > 0))
do
    case "$1" in
        --graylog-channel)  #__OPT__type:<str>
            MOD_PARAMS[__GRAYLOG_SNAP_CHANNEL__]="$2"
            shift
            ;;
        --graylog)
            MOD_OVERLAYS+=( "graylog.yaml ")
            ;;
        --grafana-channel)  #__OPT__type:<str>
            MOD_PARAMS[__GRAFANA_SNAP_CHANNEL__]="$2"
            shift
            ;;
        --lma)
            # Logging Monitoring and Alarming
            MOD_OVERLAYS+=( "graylog.yaml ")
            MOD_MSGS+=( "NOTE: you will need to manually relate graylog (filebeat) to any services you want to monitor" )
            MOD_OVERLAYS+=( "grafana.yaml ")
            MOD_MSGS+=( "NOTE: you will need to manually relate grafana (telegraf) to any services you want to monitor" )
            ;;
        --ssl)
            (cd ssl; . ./create_ca_cert.sh $MOD_SSL_STATE_DIR;)
            ssl_results="ssl/$MOD_SSL_STATE_DIR/results"
            MOD_PARAMS[__SSL_CA__]=`base64 ${ssl_results}/cacert.pem| tr -d '\n'`
            MOD_PARAMS[__SSL_CERT__]=`base64 ${ssl_results}/servercert.pem| tr -d '\n'`
            MOD_PARAMS[__SSL_KEY__]=`base64 ${ssl_results}/serverkey.pem| tr -d '\n'`
            # Make everything HA with 1 unit (unless --ha has already been set)
            if ! has_opt '--ha[:0-9]*$'; then
                set -- $@ --ha:1 && cache $@
            fi
            ;;
        --vault)
            assert_min_release queens "vault" $@
            MOD_OVERLAYS+=( "vault.yaml" )
            MOD_OVERLAYS+=( "vault-swift.yaml" )
            ;;
        --etcd-channel)  #__OPT__type:<str>
            MOD_PARAMS[__ETCD_SNAP_CHANNEL__]=$2
            shift
            ;;
        --vault-ha*)
            get_units $1 __NUM_VAULT_UNITS__ 3
            get_units $1 __NUM_ETCD_UNITS__ 3
            MOD_OVERLAYS+=( "vault-ha.yaml" )
            MOD_OVERLAYS+=( "etcd.yaml" )
            MOD_OVERLAYS+=( "easyrsa.yaml" )
            MOD_OVERLAYS+=( "etcd-easyrsa.yaml" )
            MOD_OVERLAYS+=( "vault-etcd.yaml" )
            set -- $@ --vault && cache $@
            ;;
        --ha*)
            get_units $1 __NUM_SWIFT_PROXY_UNITS__ 3
            MOD_OVERLAYS+=( "swift-ha.yaml" )
            ;;
        *)
            echo "ERROR: invalid input '$1'"
            _usage
            exit 1
            ;;
    esac
    shift
done

target=${series}-$release
[ -z "$pocket" ] || target=${target}-$pocket
MOD_PASSTHROUGH_OPTS+=( --release-name $target )

print_msgs
